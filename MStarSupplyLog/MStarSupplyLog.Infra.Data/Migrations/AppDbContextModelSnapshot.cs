// <auto-generated />
using System;
using MStarSupplyLog.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MStarSupplyLog.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.Entrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MercadoriaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MercadoriaId");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Fabricantes");
                });

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.Mercadoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FabricanteId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumeroRegistro")
                        .HasColumnType("int");

                    b.Property<int>("TipoMercadoriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FabricanteId");

                    b.HasIndex("TipoMercadoriaId");

                    b.ToTable("Mercadorias");
                });

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.Saida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MercadoriaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MercadoriaId");

                    b.ToTable("Saidas");
                });

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.TipoMercadoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TipoMercadorias");
                });

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.Entrada", b =>
                {
                    b.HasOne("MStarSupplyLog.Domain.Entities.Mercadoria", "Mercadoria")
                        .WithMany("Entradas")
                        .HasForeignKey("MercadoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mercadoria");
                });

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.Mercadoria", b =>
                {
                    b.HasOne("MStarSupplyLog.Domain.Entities.Fabricante", "Fabricante")
                        .WithMany("Mercadorias")
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MStarSupplyLog.Domain.Entities.TipoMercadoria", "TipoMercadoria")
                        .WithMany("Mercadorias")
                        .HasForeignKey("TipoMercadoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");

                    b.Navigation("TipoMercadoria");
                });

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.Saida", b =>
                {
                    b.HasOne("MStarSupplyLog.Domain.Entities.Mercadoria", "Mercadoria")
                        .WithMany("Saidas")
                        .HasForeignKey("MercadoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mercadoria");
                });

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.Fabricante", b =>
                {
                    b.Navigation("Mercadorias");
                });

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.Mercadoria", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("Saidas");
                });

            modelBuilder.Entity("MStarSupplyLog.Domain.Entities.TipoMercadoria", b =>
                {
                    b.Navigation("Mercadorias");
                });
#pragma warning restore 612, 618
        }
    }
}
